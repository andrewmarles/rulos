COMMON_OBJECTS = \
	board_buffer.o \
	calculator.o \
	clock.o \
	cpumon.o \
	cursor.o \
	display_compass.o \
	display_controller.o \
	display_docking.o \
	display_gratuitous_graph.o \
	display_rtc.o \
	display_scroll_msg.o \
	display_thrusters.o \
	drift_anim.o \
	focus.o \
	heap.o \
	idle_display.o \
	input_controller.o \
	joystick.o \
	knob.o \
	labeled_display.o \
	numeric_input.o \
	queue.o \
	random.o \
	util.o \
	sequencer.o \
	display_blinker.o \
	rasters.o \
	pong.o \
	lunar_distance.o \
	network.o \
	display_thruster_graph.o \
	display_aer.o \


.PHONY: all
all: sim-all avr-all

clean: sim-clean avr-clean

include $(ROCKET_ROOT)/Makefile.sim
include $(ROCKET_ROOT)/Makefile.avr

# Generate the sevseg bitmaps from the artwork file
$(SIM_OBJDIR)/display_controller.o: $(SIM_OBJDIR)/sevseg_bitmaps.ch

$(AVR_OBJDIR)/display_controller.o: $(AVR_OBJDIR)/sevseg_bitmaps.ch

$(SIM_OBJDIR)/laserfont.o: $(SIM_OBJDIR)/laserfont.ch

$(AVR_OBJDIR)/laserfont.o: $(AVR_OBJDIR)/laserfont.ch

FONTZIPS=$(glob $(ROCKET_ROOT)/bitmaps/*.zip)

%/laserfont.ch: $(ROCKET_ROOT)/util/ttf_to_bitmap.py $(FONTZIPS)
	$(ROCKET_ROOT)/util/ttf_to_bitmap.py $(ROCKET_ROOT)/bitmaps > $@

%/sevseg_bitmaps.ch: $(ROCKET_ROOT)/util/sevseg_convert.py $(ROCKET_ROOT)/lib/sevseg_artwork.txt
	$(ROCKET_ROOT)/util/sevseg_convert.py $(ROCKET_ROOT)/lib/sevseg_artwork.txt > $@


# Generate rasters
$(SIM_OBJDIR)/rasters.o: $(SIM_OBJDIR)/rasters_auto.ch
$(AVR_OBJDIR)/rasters.o: $(AVR_OBJDIR)/rasters_auto.ch

%/rasters_auto.ch: $(ROCKET_ROOT)/util/bitmaploader.py $(ROCKET_ROOT)/bitmaps/*.png
	$(ROCKET_ROOT)/util/bitmaploader.py $@ $(ROCKET_ROOT)/bitmaps > /dev/null


